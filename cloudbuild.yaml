steps:
  - name: 'node:19'
    entrypoint: 'npm'
    args: ['install']
  - name: 'node:19'
    entrypoint: 'npm'
    args:
      - 'run'
      - 'docs:build'
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gsutil'
    args:
      - '-m'
      - 'rsync'
      - '-r'
      - '-d'
      - 'docs/.vitepress/dist/'
      - 'gs://kagi-us-east1-docs-vitepress/'
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'compute'
      - 'url-maps'
      - 'invalidate-cdn-cache'
      - 'kagi-prod-urlmap-anycast'
      - '--path'
      - '/*'
      - '--host'
      - 'help.kagi.com'
      - '--project'
      - 'kagi-global'
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |-
          apt-get -y update && \
            apt-get install jq -y
          echo APPLICATION_ID=KX359CJ2OY > .env
          echo API_KEY=$$API_KEY >> .env
          docker run --env-file=.env -e "CONFIG=$(cat scrape-config.json | jq -r tostring)" algolia/docsearch-scraper@sha256:7bc1cd5aa4783bf24be9ddd6ef22a629b6b43e217b3fa220b6a0acbdeb83b8f8
    secretEnv: ['API_KEY']
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/kagi-docs-write-api-key/versions/latest
    env: 'API_KEY'
